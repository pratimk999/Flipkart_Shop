[{"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\App.js":"1","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\index.js":"2","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\actionConstants.jsx":"3","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\Header.jsx":"4","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\homePage\\Home.jsx":"5","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\MenuHeader.jsx":"6","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\category_actions.jsx":"7","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\index.jsx":"8","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\helpers\\axios.jsx":"9","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productListPage\\ProductListPage.jsx":"10","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\Layout.jsx":"11","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\product_actions.jsx":"12","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\product_reducer.jsx":"13","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\rootReducer.jsx":"14","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\category_reducer.jsx":"15","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\urlConfig.js":"16","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productListPage\\productStorePage\\ProductStore.jsx":"17","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\utils\\getParam.jsx":"18","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productListPage\\productPage\\ProductPage.jsx":"19","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\MaterialUi.jsx":"20","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\auth_actions.jsx":"21","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\auth_reducer.jsx":"22","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productDetailsPage\\ProductDetailsPage.jsx":"23","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\store\\store.jsx":"24","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\MyCard.jsx":"25","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\cartPage\\CartPage.jsx":"26","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\PriceDetails.jsx":"27","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\checkOutPage\\AddressForm.jsx":"28","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\cart_reducer.jsx":"29","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\user_reducer.jsx":"30","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\checkOutPage\\CheckOutPage.jsx":"31","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\orderDetailsPage\\OrderDetailsPage.jsx":"32","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\orderPage\\OrderPage.jsx":"33","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\user_actions.jsx":"34","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\cart_actions.jsx":"35","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\cartPage\\cartItem\\CartItem.jsx":"36"},{"size":1696,"mtime":1610127424891,"results":"37","hashOfConfig":"38"},{"size":315,"mtime":1609507702792,"results":"39","hashOfConfig":"38"},{"size":2585,"mtime":1610127655797,"results":"40","hashOfConfig":"38"},{"size":7439,"mtime":1610049811554,"results":"41","hashOfConfig":"38"},{"size":193,"mtime":1609518388543,"results":"42","hashOfConfig":"38"},{"size":1332,"mtime":1610022208652,"results":"43","hashOfConfig":"38"},{"size":615,"mtime":1609507453497,"results":"44","hashOfConfig":"38"},{"size":172,"mtime":1610131792186,"results":"45","hashOfConfig":"38"},{"size":1097,"mtime":1610026377942,"results":"46","hashOfConfig":"38"},{"size":798,"mtime":1610007602490,"results":"47","hashOfConfig":"38"},{"size":256,"mtime":1609668038419,"results":"48","hashOfConfig":"38"},{"size":2527,"mtime":1610035475191,"results":"49","hashOfConfig":"38"},{"size":1802,"mtime":1610034791748,"results":"50","hashOfConfig":"38"},{"size":407,"mtime":1610128028696,"results":"51","hashOfConfig":"38"},{"size":3031,"mtime":1609506929359,"results":"52","hashOfConfig":"38"},{"size":162,"mtime":1609506929613,"results":"53","hashOfConfig":"38"},{"size":2540,"mtime":1610048311159,"results":"54","hashOfConfig":"38"},{"size":433,"mtime":1609942666473,"results":"55","hashOfConfig":"38"},{"size":1973,"mtime":1610112972142,"results":"56","hashOfConfig":"38"},{"size":3267,"mtime":1610131493682,"results":"57","hashOfConfig":"38"},{"size":3097,"mtime":1610127616452,"results":"58","hashOfConfig":"38"},{"size":1415,"mtime":1610127923143,"results":"59","hashOfConfig":"38"},{"size":5778,"mtime":1610132351649,"results":"60","hashOfConfig":"38"},{"size":327,"mtime":1610033212106,"results":"61","hashOfConfig":"38"},{"size":672,"mtime":1610132078235,"results":"62","hashOfConfig":"38"},{"size":3428,"mtime":1610132123634,"results":"63","hashOfConfig":"38"},{"size":866,"mtime":1610126296813,"results":"64","hashOfConfig":"38"},{"size":6854,"mtime":1610130986692,"results":"65","hashOfConfig":"38"},{"size":1061,"mtime":1610131897895,"results":"66","hashOfConfig":"38"},{"size":2314,"mtime":1610131915785,"results":"67","hashOfConfig":"38"},{"size":10452,"mtime":1610130937093,"results":"68","hashOfConfig":"38"},{"size":3912,"mtime":1610131312138,"results":"69","hashOfConfig":"38"},{"size":2068,"mtime":1610131436949,"results":"70","hashOfConfig":"38"},{"size":3908,"mtime":1610131986642,"results":"71","hashOfConfig":"38"},{"size":3852,"mtime":1610132001706,"results":"72","hashOfConfig":"38"},{"size":1527,"mtime":1610128586194,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j7kqzk",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\App.js",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\index.js",[],["151","152"],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\actionConstants.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\Header.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\homePage\\Home.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\MenuHeader.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\category_actions.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\index.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\helpers\\axios.jsx",["153","154"],"import axios from \"axios\";\r\nimport store from \"../store/store\";\r\nimport { baseApi } from \"../urlConfig\";\r\nimport { authConstants } from \"../actions/actionConstants\";\r\n\r\nconst token =\r\n  JSON.parse(window.localStorage.getItem(\"token\")) &&\r\n  JSON.parse(window.localStorage.getItem(\"token\"));\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseApi,\r\n  headers: {\r\n    Authorization: token ? `Bearer ${token}` : \"\",\r\n  },\r\n});\r\n\r\n// axiosInstance.interceptors.request.use((req) => {\r\n//   const { auth } = store.getState();\r\n//   if (auth.token) {\r\n//     req.headers.Authorization = `Bearer ${auth.token}`;\r\n//   }\r\n//   return req;\r\n// });\r\n\r\n// axiosInstance.interceptors.response.use(\r\n//   (res) => {\r\n//     return res;\r\n//   },\r\n//   (error) => {\r\n//     console.log(error.response);\r\n//     const status = error.response ? error.response.status : 500;\r\n//     if (status && status === 500) {\r\n//       localStorage.clear();\r\n//       store.dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n//     }\r\n//     return Promise.reject(error);\r\n//   }\r\n// );\r\n\r\nexport default axiosInstance;\r\n","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productListPage\\ProductListPage.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\Layout.jsx",[],["155","156"],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\product_actions.jsx",["157"],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\product_reducer.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\rootReducer.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\category_reducer.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\urlConfig.js",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productListPage\\productStorePage\\ProductStore.jsx",["158"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllProductsBySlug } from \"../../../actions\";\r\nimport { productImageBaseUrl } from \"../../../urlConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction ProductStore(props) {\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n  const [priceRange, setPriceRange] = useState({\r\n    productsBelow5k: \"below 5000\",\r\n    productsBelow15k: \"below 15000\",\r\n    productsBelow25k: \"below 25000\",\r\n    productsBelow35k: \"below 35000\",\r\n    productsAbove35k: \"above 35000\",\r\n  });\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    dispatch(getAllProductsBySlug(match.params.slug));\r\n  }, [dispatch, props]);\r\n  return (\r\n    <>\r\n      {Object.keys(product.productsByPrice).map((key, index) => {\r\n        if (product.productsByPrice[key].length) {\r\n          return (\r\n            <div className=\"card\">\r\n              <div className=\"cardHeader\">\r\n                <div>\r\n                  {props.match.params.slug} mobile {priceRange[key]}\r\n                </div>\r\n                <button>View all</button>\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                {product.productsByPrice[key].map((productItem) => (\r\n                  <Link\r\n                    className=\"productContainer\"\r\n                    style={{ textDecoration: \"none\", color: \"gray\" }}\r\n                    to={`${productItem.slug}/${productItem._id}/p`}\r\n                  >\r\n                    <div className=\"productImgContainer\">\r\n                      <img\r\n                        src={productImageBaseUrl(\r\n                          productItem.productPictures[0].img\r\n                        )}\r\n                        alt=\"\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"productInfo\">\r\n                      <div style={{ margin: \"5px 0\", fontSize: \"14px\" }}>\r\n                        {productItem.name}\r\n                      </div>\r\n                      <div>\r\n                        <span>4.0</span>&nbsp;\r\n                        <span>(33333)</span>\r\n                      </div>\r\n                      <div className=\"productPrice\">{productItem.price}</div>\r\n                    </div>\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductStore;\r\n","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\utils\\getParam.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productListPage\\productPage\\ProductPage.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\MaterialUi.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\auth_actions.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\auth_reducer.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\productDetailsPage\\ProductDetailsPage.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\store\\store.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\MyCard.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\cartPage\\CartPage.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\components\\PriceDetails.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\checkOutPage\\AddressForm.jsx",["159"],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\cart_reducer.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\reducer\\user_reducer.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\checkOutPage\\CheckOutPage.jsx",["160"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addOrder, getAddress, getCartItems } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Anchor,\r\n  MaterialButton,\r\n  MaterialInput,\r\n} from \"../../components/MaterialUi\";\r\nimport PriceDetails from \"../../components/PriceDetails\";\r\nimport MyCard from \"../../components/MyCard\";\r\nimport CartPage from \"../cartPage/CartPage\";\r\nimport AddressForm from \"./AddressForm\";\r\n\r\nimport \"../../styling/checkOutPage.css\";\r\n\r\nconst CheckoutStep = (props) => {\r\n  return (\r\n    <div className=\"checkoutStep\">\r\n      <div\r\n        onClick={props.onClick}\r\n        className={`checkoutHeader ${props.active && \"active\"}`}\r\n      >\r\n        <div>\r\n          <span className=\"stepNumber\">{props.stepNumber}</span>\r\n          <span className=\"stepTitle\">{props.title}</span>\r\n        </div>\r\n      </div>\r\n      {props.body && props.body}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Address = ({\r\n  adr,\r\n  selectAddress,\r\n  enableAddressEditForm,\r\n  confirmDeliveryAddress,\r\n  onAddressSubmit,\r\n}) => {\r\n  return (\r\n    <div className=\"flexRow addressContainer\">\r\n      <div>\r\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\r\n      </div>\r\n      <div className=\"flexRow sb addressinfo\">\r\n        {!adr.edit ? (\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"addressDetail\">\r\n              <div>\r\n                <span className=\"addressName\">{adr.name}</span>\r\n                <span className=\"addressType\">{adr.addressType}</span>\r\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\r\n              </div>\r\n              {adr.selected && (\r\n                <Anchor\r\n                  name=\"EDIT\"\r\n                  onClick={() => enableAddressEditForm(adr)}\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    color: \"#2874f0\",\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"fullAddress\">\r\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\r\n            </div>\r\n            {adr.selected && (\r\n              <MaterialButton\r\n                title=\"DELIVERY HERE\"\r\n                onClick={() => confirmDeliveryAddress(adr)}\r\n                style={{\r\n                  width: \"200px\",\r\n                  margin: \"10px 0\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <AddressForm\r\n            withoutLayout={true}\r\n            onSubmitForm={onAddressSubmit}\r\n            initialData={adr}\r\n            onCancel={() => {}}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckoutPage = (props) => {\r\n  const user = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [newAddress, setNewAddress] = useState(false);\r\n  const [address, setAddress] = useState([]);\r\n  const [confirmAddress, setConfirmAddress] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState(null);\r\n  const [orderSummary, setOrderSummary] = useState(false);\r\n  const [orderConfirmation, setOrderConfirmation] = useState(false);\r\n  const [paymentOption, setPaymentOption] = useState(false);\r\n  const [confirmOrder, setConfirmOrder] = useState(false);\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddressSubmit = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const selectAddress = (addr) => {\r\n    //console.log(addr);\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id\r\n        ? { ...adr, selected: true }\r\n        : { ...adr, selected: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const confirmDeliveryAddress = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const enableAddressEditForm = (addr) => {\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const userOrderConfirmation = () => {\r\n    setOrderConfirmation(true);\r\n    setOrderSummary(false);\r\n    setPaymentOption(true);\r\n  };\r\n\r\n  const onConfirmOrder = () => {\r\n    const totalAmount = Object.keys(cart.cartItems).reduce(\r\n      (totalPrice, key) => {\r\n        const { price, qty } = cart.cartItems[key];\r\n        return totalPrice + price * qty;\r\n      },\r\n      0\r\n    );\r\n    const items = Object.keys(cart.cartItems).map((key) => ({\r\n      productId: key,\r\n      payablePrice: cart.cartItems[key].price,\r\n      purchasedQty: cart.cartItems[key].qty,\r\n    }));\r\n    const payload = {\r\n      addressId: selectedAddress._id,\r\n      totalAmount,\r\n      items,\r\n      paymentStatus: \"pending\",\r\n      paymentType: \"cod\",\r\n    };\r\n\r\n    console.log(payload);\r\n    dispatch(addOrder(payload));\r\n    setConfirmOrder(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.authenticate && dispatch(getAddress());\r\n    auth.authenticate && dispatch(getCartItems());\r\n  }, [auth.authenticate, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const address = user.address.map((adr) => ({\r\n      ...adr,\r\n      selected: false,\r\n      edit: false,\r\n    }));\r\n    setAddress(address);\r\n    //user.address.length === 0 && setNewAddress(true);\r\n  }, [user.address]);\r\n\r\n  useEffect(() => {\r\n    if (confirmOrder && user.placedOrderId) {\r\n      props.history.push(`/order_details/${user.placedOrderId}`);\r\n    }\r\n  }, [user.placedOrderId]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n        <div className=\"checkoutContainer\">\r\n          {/* check if user logged in or not */}\r\n          <CheckoutStep\r\n            stepNumber={\"1\"}\r\n            title={\"LOGIN\"}\r\n            active={!auth.authenticate}\r\n            body={\r\n              auth.authenticate ? (\r\n                <div className=\"loggedInId\">\r\n                  <span style={{ fontWeight: 500 }}>{auth.user.fullName}</span>\r\n                  <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <MaterialInput label=\"Email\" />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n          <CheckoutStep\r\n            stepNumber={\"2\"}\r\n            title={\"DELIVERY ADDRESS\"}\r\n            active={!confirmAddress && auth.authenticate}\r\n            body={\r\n              <>\r\n                {confirmAddress ? (\r\n                  <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\r\n                ) : (\r\n                  address.map((adr) => (\r\n                    <Address\r\n                      selectAddress={selectAddress}\r\n                      enableAddressEditForm={enableAddressEditForm}\r\n                      confirmDeliveryAddress={confirmDeliveryAddress}\r\n                      onAddressSubmit={onAddressSubmit}\r\n                      adr={adr}\r\n                    />\r\n                  ))\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n\r\n          {/* AddressForm */}\r\n          {confirmAddress ? null : newAddress ? (\r\n            <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => {}} />\r\n          ) : auth.authenticate ? (\r\n            <CheckoutStep\r\n              stepNumber={\"+\"}\r\n              title={\"ADD NEW ADDRESS\"}\r\n              active={false}\r\n              onClick={() => setNewAddress(true)}\r\n            />\r\n          ) : null}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"3\"}\r\n            title={\"ORDER SUMMARY\"}\r\n            active={orderSummary}\r\n            body={\r\n              orderSummary ? (\r\n                <CartPage onlyCartItems={true} />\r\n              ) : orderConfirmation ? (\r\n                <div className=\"stepCompleted\">\r\n                  {Object.keys(cart.cartItems).length} items\r\n                </div>\r\n              ) : null\r\n            }\r\n          />\r\n\r\n          {orderSummary && (\r\n            <MyCard\r\n              style={{\r\n                margin: \"10px 0\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"flexRow sb\"\r\n                style={{\r\n                  padding: \"20px\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                  Order confirmation email will be sent to{\" \"}\r\n                  <strong>{auth.user.email}</strong>\r\n                </p>\r\n                <MaterialButton\r\n                  title=\"CONTINUE\"\r\n                  onClick={userOrderConfirmation}\r\n                  style={{\r\n                    width: \"200px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </MyCard>\r\n          )}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"4\"}\r\n            title={\"PAYMENT OPTIONS\"}\r\n            active={paymentOption}\r\n            body={\r\n              paymentOption && (\r\n                <div>\r\n                  <div\r\n                    className=\"flexRow\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      padding: \"20px\",\r\n                    }}\r\n                  >\r\n                    <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\r\n                    <div>Cash on delivery</div>\r\n                  </div>\r\n                  <MaterialButton\r\n                    title=\"CONFIRM ORDER\"\r\n                    onClick={onConfirmOrder}\r\n                    style={{\r\n                      width: \"200px\",\r\n                      margin: \"0 0 20px 20px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* Price Component */}\r\n        <PriceDetails\r\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n            return qty + cart.cartItems[key].qty;\r\n          }, 0)}\r\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\r\n            const { price, qty } = cart.cartItems[key];\r\n            return totalPrice + price * qty;\r\n          }, 0)}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n","C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\orderDetailsPage\\OrderDetailsPage.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\orderPage\\OrderPage.jsx",["161"],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\user_actions.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\actions\\cart_actions.jsx",[],"C:\\Users\\KIIT\\Desktop\\Flipkart_Shop\\flipkart-frontend\\src\\containers\\cartPage\\cartItem\\CartItem.jsx",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"170","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":23},{"ruleId":"162","replacedBy":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","severity":1,"message":"173","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":21},{"ruleId":"166","severity":1,"message":"174","line":9,"column":22,"nodeType":"168","messageId":"169","endLine":9,"endColumn":35},{"ruleId":"166","severity":1,"message":"175","line":37,"column":14,"nodeType":"168","messageId":"169","endLine":37,"endColumn":19},{"ruleId":"176","severity":1,"message":"177","line":187,"column":6,"nodeType":"178","endLine":187,"endColumn":26,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":19,"column":6,"nodeType":"178","endLine":19,"endColumn":8,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'authConstants' is defined but never used.",["182"],["183"],"'axiosInstance' is defined but never used.","'setPriceRange' is assigned a value but never used.","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'confirmOrder' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [confirmOrder, props.history, user.placedOrderId]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch]",{"range":"192","text":"193"},[5640,5660],"[confirmOrder, props.history, user.placedOrderId]",[648,650],"[dispatch]"]